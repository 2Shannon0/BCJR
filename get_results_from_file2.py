# Открываем файл для чтения
with open('bch(31,21)supercode(2_3).txt', 'r') as file:
    lines = file.readlines()

esno_list = []
fer_list = []
ber_list = []

current_esno = None
last_data_line = None

for line in lines:
    line = line.strip()
    
    # Обработка строки с EsNo
    if line.startswith('----') and 'EsNo' in line:
        # Если у нас есть предыдущие данные, сохраняем их перед обработкой нового блока
        if current_esno is not None and last_data_line:
            parts = last_data_line.split(', ')
            fer = float(parts[0].split(' = ')[1])
            ber = float(parts[1].split(' = ')[1])
            
            esno_list.append(current_esno)
            fer_list.append(fer)
            ber_list.append(ber)
        
        # Извлекаем новое значение EsNo
        esno_part = line.split('EsNo = ')[1]
        current_esno = float(esno_part.split()[0])
        last_data_line = None
    
    # Обработка строки с данными
    elif line.startswith('fer ='):
        last_data_line = line

# Добавляем данные последнего блока после цикла
if current_esno is not None and last_data_line:
    parts = last_data_line.split(', ')
    fer = float(parts[0].split(' = ')[1])
    ber = float(parts[1].split(' = ')[1])
    
    esno_list.append(current_esno)
    fer_list.append(fer)
    ber_list.append(ber)

print("ESNO array:", esno_list)
print("FER array:", fer_list)
print("BER array:", ber_list)

# assert esno_list == [-4, -3.9, -3.8, -3.7, -3.6, -3.5, -3.4, -3.3, -3.2, -3.1, -3.0, -2.9, -2.8, -2.7, -2.6, -2.5, -2.4, -2.3, -2.2, -2.1, -2.0, -1.9, -1.8, -1.7, -1.6, -1.5, -1.4, -1.3, -1.2, -1.1, -1.0, -0.9, -0.8, -0.7, -0.6, -0.5, -0.4, -0.3, -0.2, -0.1, 0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 2.0, 2.1, 2.2, 2.3, 2.4, 2.5, 2.6, 2.7, 2.8, 2.9, 3.0, 3.1, 3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.8, 3.9, 4.0, 4.1, 4.2, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 5.0, 5.1, 5.2, 5.3, 5.4, 5.5, 5.6, 5.7, 5.8, 5.9, 6.0, 6.1, 6.2, 6.3, 6.4, 6.5, 6.6, 6.7, 6.8, 6.9, 7.0, 7.1, 7.2, 7.3, 7.4, 7.5, 7.6, 7.7, 7.8, 7.9, 8.0, 8.1, 8.2, 8.3, 8.4]
# assert fer_list == [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.9803921568627451, 0.9803921568627451, 1.0, 0.9803921568627451, 0.9803921568627451, 0.9803921568627451, 0.9803921568627451, 0.8928571428571429, 1.0, 0.9433962264150944, 0.9433962264150944, 0.9259259259259259, 0.9803921568627451, 0.9803921568627451, 0.9259259259259259, 0.9433962264150944, 0.9259259259259259, 0.9433962264150944, 0.8771929824561403, 0.8928571428571429, 0.9433962264150944, 0.9090909090909091, 0.8620689655172413, 0.8333333333333334, 0.7936507936507936, 0.8771929824561403, 0.9433962264150944, 0.8620689655172413, 0.8620689655172413, 0.819672131147541, 0.78125, 0.8620689655172413, 0.819672131147541, 0.7575757575757576, 0.746268656716418, 0.8771929824561403, 0.7575757575757576, 0.7246376811594203, 0.7142857142857143, 0.684931506849315, 0.7575757575757576, 0.7246376811594203, 0.7142857142857143, 0.7246376811594203, 0.684931506849315, 0.684931506849315, 0.5813953488372093, 0.5319148936170213, 0.5681818181818182, 0.5154639175257731, 0.46296296296296297, 0.5050505050505051, 0.5050505050505051, 0.45454545454545453, 0.3937007874015748, 0.3225806451612903, 0.38461538461538464, 0.390625, 0.3067484662576687, 0.3225806451612903, 0.2808988764044944, 0.2840909090909091, 0.23255813953488372, 0.23923444976076555, 0.25, 0.2127659574468085, 0.199203187250996, 0.13333333333333333, 0.14124293785310735, 0.12853470437017994, 0.1466275659824047, 0.12468827930174564, 0.07874015748031496, 0.09174311926605505, 0.07911392405063292, 0.05807200929152149, 0.06009615384615385, 0.041701417848206836, 0.041911148365465216, 0.03581661891117478, 0.03134796238244514, 0.026567481402763018, 0.025549310168625446, 0.020024028834601523, 0.017998560115190784, 0.015239256324291375, 0.010665529010238909, 0.009665571235260004, 0.008744316194473592, 0.007594167679222357, 0.007523322299127295, 0.00502815768302494, 0.004601509295048776, 0.0028900063580139875, 0.0025898684346835183, 0.002196257577088641, 0.0017686593562079944, 0.0014068655036578502, 0.0010564570655848546, 0.0006128953174797745, 0.000661892217471307, 0.0003989181340205363, 0.00036386394399406176, 0.0002444437925943309, 0.00020570713886054702, 0.00010362887597903381, 0.00011112247029696368, 8.125545088649697e-05]
# assert ber_list == [0.72, 0.7587096774193549, 0.7348387096774194, 0.7438709677419355, 0.7445161290322581, 0.743225806451613, 0.7464516129032258, 0.7651612903225806, 0.767741935483871, 0.76, 0.29612903225806453, 0.24967741935483873, 0.24451612903225808, 0.22451612903225807, 0.23032258064516128, 0.24193548387096775, 0.2335483870967742, 0.23529411764705882, 0.21821631878557873, 0.23612903225806453, 0.232764073371284, 0.23402909550917142, 0.24035420619860848, 0.22517394054395953, 0.20852534562211983, 0.23548387096774193, 0.21972002434570906, 0.20389531345100426, 0.22102747909199522, 0.19860847564832385, 0.22643896268184693, 0.1827956989247312, 0.202069385270846, 0.2025089605734767, 0.21241631162507607, 0.17034521788341822, 0.17972350230414746, 0.1868533171028606, 0.18826979472140765, 0.15684093437152394, 0.17849462365591398, 0.15770609318996415, 0.17883418222976796, 0.17589774802191113, 0.1657397107897664, 0.1484983314794216, 0.14859862506610258, 0.13306451612903225, 0.14794215795328142, 0.13537810682178741, 0.12658846529814272, 0.12229176697159365, 0.1494057724957555, 0.12365591397849464, 0.11547452080411408, 0.11705069124423963, 0.11975254087494476, 0.1295210166177908, 0.10939691444600282, 0.1216589861751152, 0.10892940626460963, 0.10870525850640743, 0.10472823685373399, 0.07389347336834208, 0.07961564859299931, 0.07514662756598241, 0.07515796474891918, 0.06511350059737156, 0.06842619745845553, 0.06744868035190617, 0.058064516129032254, 0.05994411988823978, 0.04349635796045786, 0.04962779156327543, 0.05040322580645161, 0.037205620423510784, 0.04245577523413112, 0.03733236679956506, 0.034274193548387094, 0.030007501875468866, 0.027782065133508258, 0.029838709677419355, 0.024433768016472204, 0.024032900655442745, 0.015827956989247313, 0.01822489520685256, 0.01600464383448047, 0.01731151262889036, 0.013595044646448394, 0.00889001778003556, 0.00976620301864457, 0.008217639853001224, 0.0065939829905211494, 0.006474875930521091, 0.004681320455218059, 0.004326312089338345, 0.003674091875404381, 0.003559510567296997, 0.0028281512461005793, 0.0023900967577101225, 0.001963646698618988, 0.0019275877284655935, 0.001622243415166501, 0.001004624022899923, 0.0010788024669032134, 0.0009139220796804657, 0.0007496178418845295, 0.000732917204624659, 0.0004801079594114136, 0.00047499450787600266, 0.00030018775718725934, 0.00024896154630183495, 0.00020970717510265734, 0.00015860880678252335, 0.00013796358487483436, 9.201400248642281e-05, 5.8521617410972016e-05, 5.892975871680023e-05, 3.3457649950109495e-05, 3.2630379493661015e-05, 2.286732253301805e-05, 1.937628533783217e-05, 9.761171543831573e-06, 9.893484452245799e-06, 6.81497330015781e-06]